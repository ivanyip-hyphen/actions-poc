name: CI

on:
  workflow_dispatch:
    inputs:
      singsaver:
        required: false
        type: boolean
        description: singsaver
      moneyhero:
        required: false
        type: boolean
        description: moneyhero
      money101:
        required: false
        type: boolean
        description: money101
      comparehero:
        required: false
        type: boolean
        description: comparehero
      moneyguru:
        required: false
        type: boolean
        description: moneyguru
      moneymax:
        required: false
        type: boolean
        description: moneymax
      commit:
        required: false
        type: string
        description: Enter commit hash (use branch HEAD if not specified)

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          markets=()
          if [[ ${{github.event.inputs.singsaver }} ]]; then markets+=('singsaver'); fi
          if [[ ${{github.event.inputs.moneyhero }} ]]; then markets+=('moneyhero'); fi
          if [[ ${{github.event.inputs.money101 }} ]]; then markets+=('money101'); fi
          if [[ ${{github.event.inputs.comparehero }} ]]; then markets+=('comparehero'); fi
          if [[ ${{github.event.inputs.moneyguru }} ]]; then markets+=('moneyguru'); fi
          if [[ ${{github.event.inputs.moneymax }} ]]; then markets+=('moneymax'); fi
          echo "::set-output name=matrix::{\"markets\": $(printf '%s\n' "${markets[@]}" | jq -R . | jq -s .)}""

  build:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJSON(needs.prepare.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v2
        name: checkout commit
        with:
          ref: ${{ github.event.inputs.commit }}

      - name: greet
        run: | 
          echo "environment is ${{ github.event.inputs.environment }}"
          echo "boolean is ${{ github.event.inputs.boolean }}"
          echo "commit is ${{ github.event.inputs.commit }}"
          echo "ref is ${{ github.ref }}"
          echo "matrix is ${{fromJSON(needs.prepare.outputs.matrix)}}"