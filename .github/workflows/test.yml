name: CI

on:
  workflow_dispatch:
    inputs:
      singsaver:
        required: false
        type: boolean
        description: singsaver
      moneyhero:
        required: false
        type: boolean
        description: moneyhero
      money101:
        required: false
        type: boolean
        description: money101
      comparehero:
        required: false
        type: boolean
        description: comparehero
      moneyguru:
        required: false
        type: boolean
        description: moneyguru
      moneymax:
        required: false
        type: boolean
        description: moneymax
      commit:
        required: false
        type: string
        description: Enter commit hash (use branch HEAD if not specified)

jobs:
  gen-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          echo '::echo::on'
          markets=()
          if ${{ github.event.inputs.singsaver }}; then markets+=('singsaver'); fi;
          if ${{ github.event.inputs.moneyhero }}; then markets+=('moneyhero'); fi;
          if ${{ github.event.inputs.money101 }}; then markets+=('money101'); fi;
          if ${{ github.event.inputs.comparehero }}; then markets+=('comparehero'); fi;
          if ${{ github.event.inputs.moneyguru }}; then markets+=('moneyguru'); fi;
          if ${{ github.event.inputs.moneymax }}; then markets+=('moneymax'); fi;
          echo "::set-output name=matrix::{\"markets\": $(jq --compact-output --null-input '$ARGS.positional' --args "${markets[@]}")}"

  build:
    needs: gen-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJSON(needs.gen-matrix.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v2
        name: checkout commit
        with:
          ref: ${{ github.event.inputs.commit }}
          fetch-depth: '0'

      - name: greet
        run: | 
          echo "environment is ${{ github.event.inputs.environment }}"
          echo "boolean is ${{ github.event.inputs.boolean }}"
          echo "commit is ${{ github.event.inputs.commit }}"
          echo "sha is $(git rev-parse --short HEAD)"
          echo "ref is ${{ github.ref }}"
          echo "matrix is ${{fromJSON(needs.gen-matrix.outputs.matrix)}}"
          echo "market is ${{matrix.markets}}"
          echo $(GITHUB_REF##*/)
          echo ${{ github.ref }}

      - name: Get Next Tag
        id: nextTag
        run: |
          echo '::echo::on'
          echo "::set-output name=tag::${{matrix.markets}}-$(date -u +"%Y.%m.%dT%H.%M.%SZ")"
      - name: CreateTag
        run: |
          createTag () {
            local market=$1
            local version=$2
            local tag=deploy-$market-$version

            echo 'Create tag:' $tag
            git tag $tag
            git push origin $tag
          }
          createTag ${{steps.nextTag.outputs.tag}}
      
      - name: Update remote tag
        uses: actions/github-script@v5
        env:
          TAG: ${{ steps.nextTag.outputs.tag }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          debug: true
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${process.env.TAG}`,
              sha: context.sha
            })